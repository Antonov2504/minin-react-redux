{"version":3,"sources":["reportWebVitals.js","redux/types.js","redux/actions.js","components/Warning.js","components/PostForm.js","components/Post.js","components/Posts.js","components/Loader.js","components/FetchedPosts.js","App.js","redux/postsReducer.js","redux/appReducer.js","redux/rootReducer.js","redux/middleware.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_POST","FETCH_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ERROR","HIDE_ERROR","hideLoader","type","showError","message","dispatch","payload","setTimeout","Warning","errorMessage","className","role","PostForm","props","handleChange","e","target","name","value","setState","state","submitHandler","preventDefault","title","trim","newPost","id","Date","now","toString","console","log","createPost","bind","this","error","onSubmit","htmlFor","onChange","React","Component","mapDispatchToProps","post","connect","app","Post","syncPosts","posts","length","map","Loader","FetchedPosts","useDispatch","fetchedPosts","useSelector","loading","onClick","a","fetch","response","ok","json","Error","App","initialState","isError","rootReducer","combineReducers","action","forbiddenWords","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","filter","word","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.021f93e9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CREATE_POST = 'POST/CREATE_POST';\nexport const FETCH_POST = 'POST/FETCH_POST';\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\nexport const SHOW_ERROR = 'APP/SHOW_ERROR';\nexport const HIDE_ERROR = 'APP/HIDE_ERROR';\n\n","import { CREATE_POST, FETCH_POST, HIDE_LOADER, SHOW_LOADER, SHOW_ERROR, HIDE_ERROR } from \"./types\";\n\nexport function createPost(post) {\n  return {\n    type: CREATE_POST,\n    payload: post\n  }\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER,\n  }\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER,\n  }\n}\n\nexport function showError(message) {\n  return dispatch => {\n    dispatch({\n      type: SHOW_ERROR,\n      payload: message\n    });\n    setTimeout(() => {\n      dispatch(hideError());\n    }, 3000);\n  }\n}\n\nexport function hideError() {\n  return {\n    type: HIDE_ERROR\n  }\n}\n\nexport function fetchPosts() {\n  return async dispatch => {\n    try {\n      dispatch(showLoader());\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');\n      if (response.ok) {\n        const json = await response.json();\n        console.log(response);\n        setTimeout(() => {\n          dispatch({ type: FETCH_POST, payload: json });\n          dispatch(hideLoader());\n        }, 1000);\n      } else {\n        throw new Error();\n      }\n    } catch (e) {\n      dispatch(showError('Что-то пошло не так...'));\n      dispatch(hideLoader());\n    }\n  }\n}\n","import React from \"react\";\n\nexport const Warning = ({ errorMessage }) => {\n  return (\n    <div className=\"alert alert-warning\" role=\"alert\">{errorMessage}</div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createPost, showError } from './../redux/actions';\nimport { Warning } from './Warning';\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitHandler = this.submitHandler.bind(this);\n\n    this.state = {\n      title: '',\n    }\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      ...this.state,\n      [name]: value\n    })\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { title } = this.state;\n    if (!title.trim()) {\n      this.props.showError('Заголовок поста не может быть пустым');\n      return;\n    }\n    const newPost = {\n      title,\n      id: Date.now().toString()\n    }\n    console.log(newPost);\n    this.props.createPost(newPost);\n    this.setState({\n      title: ''\n    })\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.error && <Warning errorMessage={this.props.error} />}\n        <form onSubmit={this.submitHandler}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"title\" className=\"form-label\">Заголовок поста</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              value={this.state.title}\n              name=\"title\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success\">Создать</button>\n        </form>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.app.error\n  }\n}\n\nconst mapDispatchToProps = {\n  createPost,\n  showError\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm)\n","import React from \"react\";\n\nexport default function Post({ post }) {\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport Post from \"./Post\";\n\nfunction Posts({ syncPosts }) {\n  if (!syncPosts.length) {\n    return <p className=\"text-center\">Постов пока нет</p>\n  }\n  return syncPosts.map((post) => <Post key={post.id} post={post} />)\n}\n\nconst mapStateToProps = state => {\n  return {\n    syncPosts: state.posts.posts,\n  }\n}\n\nexport default connect(mapStateToProps, null)(Posts);\n","import React from \"react\";\n\nexport const Loader = () => {\n  return (\n    <div className=\"spinner-border text-primary\" role=\"status\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </div>\n  )\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts } from './../redux/actions';\nimport { Loader } from \"./Loader\";\nimport Post from \"./Post\";\n\nexport default function FetchedPosts() {\n  const dispatch = useDispatch();\n  const fetchedPosts = useSelector(state => state.posts.fetchedPosts);\n  const isLoading = useSelector(state => state.app.loading);\n\n  if (isLoading) {\n    return <Loader />\n  }\n\n  if (!fetchedPosts.length) {\n    return <button\n      className=\"btn btn-primary\"\n      onClick={() => dispatch(fetchPosts())}\n    >Загрузить</button>\n  }\n\n  return fetchedPosts.map((post) => <Post key={post.id} post={post} />)\n}\n","import React from \"react\";\nimport PostForm from \"./components/PostForm\";\nimport Posts from \"./components/Posts\";\nimport FetchedPosts from \"./components/FetchedPosts\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <PostForm />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Синхронные Посты</h2>\n          <Posts />\n        </div>\n        <div className=\"col\">\n          <h2>Асинхронные Посты</h2>\n          <FetchedPosts />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { CREATE_POST, FETCH_POST } from \"./types\";\n\nconst initialState = {\n  posts: [],\n  fetchedPosts: [],\n}\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      return {\n        ...state,\n        posts: [...state.posts, action.payload]\n      }\n      case FETCH_POST:\n        return {\n          ...state,\n          fetchedPosts: action.payload\n        }\n    default: return state;\n  }\n\n}","import { SHOW_LOADER, HIDE_LOADER, SHOW_ERROR, HIDE_ERROR } from \"./types\";\n\nconst initialState = {\n  loading: false,\n  isError: null,\n}\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_LOADER:\n      return {\n        ...state,\n        loading: true\n      };\n    case HIDE_LOADER:\n      return {\n        ...state,\n        loading: false\n      };\n    case SHOW_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case HIDE_ERROR:\n      return {\n        ...state,\n        error: null\n      }\n    default: return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { postsReducer } from \"./postsReducer\";\nimport { appReducer } from \"./appReducer\";\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer,\n  app: appReducer,\n});\n","import { showError } from \"./actions\";\nimport { CREATE_POST } from \"./types\";\n\nconst forbiddenWords = ['fuck', 'spam', 'php'];\n\nexport const forbiddenWordsMiddleware = ({ dispatch }) => {\n  return function (next) {\n    return function (action) {\n      if (action.type === CREATE_POST) {\n        const found = forbiddenWords.filter(word => action.payload.title.includes(word));\n        if (found.length) {\n          dispatch(showError('Вы спамер. Мы вас не звали, идите домой'));\n        }\n      }\n      return next(action);\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport { forbiddenWordsMiddleware } from './redux/middleware';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk, forbiddenWordsMiddleware),\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}